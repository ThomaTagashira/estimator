name: Django CI

on:
  push:
    branches: ["Dev"]
  pull_request:
    branches: ["Dev"]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: django-env
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: ankane/pgvector:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: mock_test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password

    env:
        DB_ENGINE: django.db.backends.postgresql
        TEST_DB_NAME: mock_test_db
        TEST_DB_USER: test_user
        TEST_DB_PASSWORD: test_password
        DB_HOST: localhost
        DB_PORT: 5432
        TEST_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TEST_CONNECTION_STRING: "postgresql+psycopg2://test_user:test_password@localhost:5432/mock_test_db"
        TEST_COLLECTION_NAME: 'test_cost_vectors'
        DJANGO_SETTINGS_MODULE: djangoReact.settings
        TEST_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for Postgres to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for Postgres...";
          sleep 5;
        done

    - name: Print Environment Variables
      run: |
        echo "DB_ENGINE=$DB_ENGINE"
        echo "DB_NAME=$TEST_DB_NAME"
        echo "DB_USER=$TEST_DB_USER"
        echo "DB_PASSWORD=$TEST_DB_NAME"
        echo "DB_HOST=$DB_HOST"
        echo "DB_PORT=$DB_PORT"
        echo "DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE"
        echo "TEST_SECRET_KEY=$TEST_SECRET_KEY"
        echo "TEST_OPENAI_API_KEY=$TEST_OPENAI_API_KEY"

    - name: Setup Postgres User as Superuser
      run: |
        psql -h localhost -U test_user -d mock_test_db -c "ALTER USER test_user WITH SUPERUSER;"
      env:
        PGPASSWORD: test_password

    - name: Confirm User Permissions
      run: |
        psql -h localhost -U test_user -d mock_test_db -c "\du"
      env:
        PGPASSWORD: test_password

    - name: Check Django Database Configuration
      run: |
        python -c "from django.conf import settings; print(settings.DATABASES)"

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test
