# Generated by Django 5.1 on 2024-12-08 18:16

import django.db.models.deletion
import pgvector.django
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HandymanPgCollection',
            fields=[
                ('name', models.CharField(blank=True, null=True)),
                ('cmetadata', models.TextField(blank=True, null=True)),
                ('uuid', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'handyman_pg_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HandymanPgEmbeddings',
            fields=[
                ('embedding', pgvector.django.VectorField(dimensions=1536)),
                ('document', models.CharField(blank=True, null=True)),
                ('cmetadata', models.TextField(blank=True, null=True)),
                ('custom_id', models.CharField(blank=True, null=True)),
                ('uuid', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'handyman_pg_embedding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LangchainPgCollection',
            fields=[
                ('name', models.CharField(blank=True, null=True)),
                ('cmetadata', models.TextField(blank=True, null=True)),
                ('uuid', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'langchain_pg_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LangchainPgEmbedding',
            fields=[
                ('embedding', pgvector.django.VectorField(dimensions=1536)),
                ('document', models.CharField(blank=True, null=True)),
                ('cmetadata', models.TextField(blank=True, null=True)),
                ('custom_id', models.CharField(blank=True, null=True)),
                ('uuid', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'langchain_pg_embedding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_address', models.CharField(blank=True, max_length=255, null=True)),
                ('business_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('business_email', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businessInfo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StripeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_exempt', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.CharField(editable=False, max_length=150)),
                ('is_active', models.BooleanField(default=False)),
                ('cancellation_pending', models.BooleanField(default=False)),
                ('subscription_type', models.CharField(choices=[('Basic', 'Basic'), ('Premium', 'Premium'), ('Enterprise', 'Enterprise')], max_length=50)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancellation_date', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('trial_end_date', models.DateTimeField(blank=True, null=True)),
                ('token_allocation', models.PositiveIntegerField(default=0)),
                ('last_token_allocation_date', models.DateTimeField(blank=True, null=True)),
                ('last_payment_date', models.DateTimeField(blank=True, null=True)),
                ('last_processed_invoice_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEstimates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_id', models.CharField(editable=False, max_length=255, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('project_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userEstimates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'estimate_id')},
            },
        ),
        migrations.CreateModel(
            name='SearchResponseData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('estimate_reference_id', models.CharField(max_length=20)),
                ('saved_response_id', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_responses', to='api.userestimates')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.TextField(blank=True, null=True)),
                ('project_location', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_data', to='api.userestimates', to_field='estimate_id')),
            ],
        ),
        migrations.CreateModel(
            name='EstimateItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_description', models.TextField(blank=True, null=True)),
                ('task_number', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimateItems', to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimate_items', to='api.userestimates', to_field='estimate_id')),
            ],
        ),
        migrations.CreateModel(
            name='ClientData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('client_address', models.CharField(blank=True, max_length=255, null=True)),
                ('client_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('client_email', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clientData', to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_data', to='api.userestimates', to_field='estimate_id')),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_balance', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
